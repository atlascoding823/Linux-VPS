name: Ubuntu - VNC

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub provides hosted Ubuntu runners

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up the environment
      run: |
        sudo apt update
        sudo apt install -y xfce4 xfce4-goodies
        sudo apt install -y tigervnc-standalone-server tigervnc-viewer xorg dbus-x11 x11-xserver-utils

    - name: Configure VNC server
      run: |
        # Create necessary directories and files
        mkdir -p ~/.vnc
        touch ~/.Xauthority
        touch ~/.Xresources
        
        # Set up a VNC password for the user. We can supply it non-interactively.
        echo "your_password_here" | vncpasswd -f > ~/.vnc/passwd
        chmod 600 ~/.vnc/passwd
        
        # Create a minimal .Xresources file to avoid xrdb issues
        echo "XTerm*faceName: Monospace" > ~/.Xresources
        
        # Set up a basic startup file for the VNC server (using a simple X application like xterm for testing).
        echo "#!/bin/bash" > ~/.vnc/xstartup
        echo "xrdb $HOME/.Xresources" >> ~/.vnc/xstartup
        echo "xterm &" >> ~/.vnc/xstartup  # Use xterm to verify the server is starting properly.
        chmod +x ~/.vnc/xstartup

    - name: Start VNC server
      run: |
        # Start the VNC server on display :1
        vncserver :1 -geometry 1280x1024 -depth 24

    - name: Print system information
      run: |
        echo "VNC server running on display :1"
        echo "Use VNC viewer to connect with your runner's IP and port 5901"

    - name: Check VNC log for errors
      run: |
        cat ~/.vnc/*.log

    - name: Wait for the server to finish
      run: |
        echo "VNC server is running..."
